[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
# default_parameter_X: 5 #edit to your park position
# default_parameter_Y: 5 #edit to your park position
# default_parameter_Z: 10 #edit to your park position
# default_parameter_E: 0.5 #edit to your retract length
gcode:
	{% set X = params.X|default(5)|int %}
	{% set Y = params.Y|default(5)|int %}
	{% set Z = params.Z|default(10)|int %}
	{% set E = params.E|default(0.5)|int %}
	SAVE_GCODE_STATE NAME=PAUSE_state
	BASE_PAUSE
	G91
	G1 E-{E} F2100
	G1 Z{Z}
	G90
	G1 X{X} Y{Y} F6000

[gcode_macro RESUME]
rename_existing: BASE_RESUME
# default_parameter_E: 0.5 #edit to your retract length
gcode:
	{% set E = params.E|default(0.5)|int %}
	G91
	G1 E{E} F2100
	G90
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
	BASE_RESUME

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	SDCARD_RESET_FILE
	BASE_CANCEL_PRINT

[gcode_macro testLEVEL]
gcode:
	BED_SCREWS_ADJUST

[gcode_macro testNEXTPOINT]
gcode:
	ADJUSTED

[gcode_macro testACCEPT]
gcode:
	ACCEPT


[gcode_macro START_PRINT]
gcode:
	{% set BED_TEMP = params.BED_TEMP|default(60)|int %}
	{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(210)|int %}
	# Reset speed
	M220 S100
	# Reset extrusion rate
	M221 S100
	# Use absolute coordinates
	G90
	# Use relative extruder
	M83
	# Reset the G-Code Z offset (adjust Z offset if needed)
	SET_GCODE_OFFSET Z=0.0
	# Wait for bed to reach temperature
	M190 S{BED_TEMP}
    # Home the printer
	G28
    BED_MESH_CALIBRATE
    PARK_XY
	# Set and wait for nozzle to reach temperature
	M109 S{EXTRUDER_TEMP}
	# Absolute extrusion mode
	M82



[gcode_macro RESET_PRESSURE_ADVANCE]
gcode:
	SET_PRESSURE_ADVANCE ADVANCE={printer.configfile.config["extruder"]["pressure_advance"]}
	


[gcode_macro M300]
#   Use a 10ms duration is P is omitted.
gcode:
	{% set P = params.BED_TEMP|default(10)|int %}
	RESPOND MSG="[[BEEP]]" PREFIX=""
	# SET_PIN PIN=beeper VALUE=255
	# G4 P{P}
	# SET_PIN PIN=beeper VALUE=0


#filament change for prusaslicer
[gcode_macro M600] 
gcode:
	M300
	RESPOND MSG="M600 PAUSE"
	PAUSE

[gcode_macro END_PRINT]
gcode:
	# Reset speed
	M220 S100
	# Reset extrusion rate
	M221 S100
	# Turn off bed, extruder, and fan
	M140 S0
	M104 S0
	M106 S0
	# Move nozzle away from print while retracting
	G91
	G1 X-2 Y-2 E-2.5 F500
	# Raise nozzle by 10mm
	G1 Z10 F3000
	G90
# Home X and Y
	G28 X Y
#	RESET_PRESSURE_ADVANCE
#	PARK_XY
	# Disable steppers
	M84
	M300


[gcode_macro PRIME_LINE_CURA]
gcode:
	SAVE_GCODE_STATE NAME=PRIME_LINE

	#absolute positioning
	G90 
	G1 Z5.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
    G1 X0.1 Y20 F5000.0 ; Move to start position
	G1 X0.1 Y20 Z0.3 F5000.0 ; Move to start position
	G1 X0.1 Y200.0 Z0.3 F1500.0 E15 ; Draw the first line
	G1 X0.4 Y200.0 Z0.3 F5000.0 ; Move to side a little
	G1 X0.4 Y20 Z0.3 F1500.0 E30 ; Draw the second line
	G92 E0 ; Reset Extruder
	G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
	G1 X5 Y20 Z0.3 F5000.0 ; Move over to prevent blob squish
	RESTORE_GCODE_STATE NAME=PRIME_LINE



[gcode_macro PRIME_TEST]
gcode: 
	M104 S210
	G28
	G1 Z10 F3000
	M109 S210
	PRIME_LINE_DYNAMIC
	G1 Z10 F3000
	



[gcode_macro PRIME_LINE_DYNAMIC]
gcode:
	{% set wipe_count = 3 %}
	{% set x_start = 0.1 %}
	{% set x_end = 150.01 %}
	{% set y_start = 10 %}
	{% set y_step = -0.3 %}
	{% set e_per_mm = 0.1 %}
	{% set e = e_per_mm * ((x_end - x_start)|abs) %}

	{% set z_height = 0.3 %}



	SAVE_GCODE_STATE NAME=PRIME_LINE
	G90 ;absolute position
	M83 ;extruder relative
	G0 Z10 F3000 ;zup
	G1 X{x_start} Y{y_start} F5000.0 ; Move to line start

	{% for wipe in range(wipe_count) %}
	{% set y_cur = y_start + (y_step * wipe) %}
	

	# RESPOND MSG="wipe {wipe} ... {y_cur} ... {e}"
	{% if wipe is divisibleby 2 %}
	# RESPOND MSG="A"
		G1 X{x_start} Y{y_cur} Z{z_height} F5000.0 ; Move to line start
		G1 X{x_end} Y{y_cur} Z{z_height} F1500.0 E{e} ; Draw line
	{% else %}
	# RESPOND MSG="B"
		G1 X{x_end} Y{y_cur} Z{z_height} F5000.0 ; Move to line start
		G1 X{x_start} Y{y_cur} Z{z_height} F1500.0 E{e} ; Draw line
	{% endif %}


	{% endfor %}

	{% set y_blob = y_start + (y_step * (wipe_count + 1)) %}
	G1 Z2 F3000 ;zup
	G1 x{x_start} Y{y_blob} F5000
	G1 Z{z_height} F1500
	G1 x{x_end} Y{y_start} F500


	RESTORE_GCODE_STATE NAME=PRIME_LINE



[gcode_macro TUNE_TEMP_PLA]
gcode:
	TUNING_TOWER COMMAND="SET_HEATER_TEMPERATURE HEATER=extruder" PARAMETER=TARGET SKIP=1.5 START=225 STEP_HEIGHT=10 STEP_DELTA=-5 
	M23 macro-Tuning Tower skip15 step100 delta-5.gcode
	M24

[gcode_macro TUNE_PA]
gcode:
	{% set start = params.START|default(0)|float %}
	{% set end = params.END|default(0.25)|float %}
	# {% set height = params.MODEL_HEIGHT|default(50)|float %}
	{% set model_height = 50 %}

	{% set BED_TEMP = params.BED_TEMP|default(60)|int %}
	{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(210)|int %}

	{% set range = end - start %}
	{% set factor = range / model_height %}

	# # pressure_advance = <start> + <measured_height> * <factor>
	RESPOND MSG="configured value: {printer.configfile.config["extruder"]["pressure_advance"]}"
	
	RESPOND MSG="Start START={start} FACTOR={factor} HEIGHT={model_height}"
	# RESPOND MSG="PA will be {start} +  measured height * {factor}"
	RESPOND MSG="PA will be {start} + measured height x {factor}"

	SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=1 ACCEL=500

	TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START={start} FACTOR={factor}
	START_PRINT BED_TEMP={BED_TEMP} EXTRUDER_TEMP={EXTRUDER_TEMP}
	M23 macro-square_tower.gcode
	M24


[gcode_macro CENTER_XY]
gcode:
	SAVE_GCODE_STATE NAME=pre_move
	G90
	G1 X{printer.toolhead.axis_maximum.x / 2 } Y{printer.toolhead.axis_maximum.y / 2} F5000
	RESTORE_GCODE_STATE NAME=pre_move
	

[gcode_macro PARK_XY]
gcode:
	SAVE_GCODE_STATE NAME=pre_move
	G90
	G1 X2 Y{printer.toolhead.axis_maximum.y - 2} F2500
	# G1 X2 Y2 F2500
	# G1 X{printer.toolhead.axis_maximum.x - 2} Y{printer.toolhead.axis_maximum.y - 2} F2500

	RESTORE_GCODE_STATE NAME=pre_move





[gcode_macro LOAD]
gcode:
	{% set old_target_temp = printer.extruder.target %}
	SAVE_GCODE_STATE NAME=pre_load
	{% if printer.extruder.target < 210 %}
		M109 S210
	{% endif %}
	G92 E0 ; Reset Extruder
	M82 ; E-absolute
	M300
	G1 E5 F30
	G1 E30 F300
	G92 E0 ; Reset Extruder
	M300
	{% if printer.extruder.target > 0 %}
		M109 S{old_target_temp}
	{% else %}
		SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
	{% endif %}
	RESTORE_GCODE_STATE NAME=pre_load


[gcode_macro UNLOAD]
gcode:
	SAVE_GCODE_STATE NAME=pre_unload
	{% if printer.extruder.target < 210 %}
		M109 S210
	{% endif %}
	G92 E0 ; Reset Extruder
	M82 ; E-absolute
	M300
	G1 E-100 F500
	G92 E0 ; Reset Extruder
	M300
	RESTORE_GCODE_STATE NAME=pre_unload


[gcode_macro A_HEAT_SOAK_BED]
gcode:
	{% set TEMP = params.TEMPERATURE|default(0)|float %}
	{% set DURATION = params.DURATION|default(300)|int %}
	{% set SKIP_TESHOLD = 0.74|float %}
	{% set TRESHOLD_TEMP = (TEMP * SKIP_TESHOLD) %}
	{% set SKIP = printer.heater_bed.temperature > TRESHOLD_TEMP %}
	{% set SKIP_RATE = 0.25 %}
	{% set STEP = 10 %}
	{% set FULL_STEPS = (DURATION/STEP)|round(0,'floor')|int %}
	{% set FINAL_STEP = DURATION - (FULL_STEPS*STEP)|float %}

	
	RESPOND msg="Current temp: {printer.heater_bed.temperature}";
	{% if (SKIP) %}
	RESPOND msg="Current temp ({printer.heater_bed.temperature}) is over treshold {TRESHOLD_TEMP}. Doing a {SKIP_RATE * 100}% duration run";
	{% set DURATION = DURATION * SKIP_RATE %}
	{% endif %}
	RESPOND msg="Heat soak to {TEMP} for {DURATION}sec started";
	RESPOND msg="Heat soak: heating to {TEMP}"
	M190 S{TEMP}
	{% for i in range(FULL_STEPS) %}
	RESPOND msg="Heat soak: Step {i}"
	M140 S{TEMP}
	G4 P{STEP*1000}

	{% endfor %}
	M140 S{TEMP}
	G4 P{FINAL_STEP*1000}
	
	RESPOND msg="Heat soak: completed"

[gcode_macro SCREWS_START]
gcode:
	BED_SCREWS_ADJUST

[gcode_macro SCREWS_ADJUSTED]
gcode:
	ADJUSTED

[gcode_macro SCREWS_NOT_ADJUSTED]
gcode:
	ACCEPT


# [gcode_macro global_set]
# variable_x: 132
# variable_z: 8888
# variable_p: 456
# gcode:
# 	# {% set p = params.P|default(0)|float %}
# 	SET_GCODE_VARIABLE MACRO=global_set VARIABLE=z VALUE={P}
# 	# SET_GCODE_VARIABLE MACRO=global_set VARIABLE=p VALUE=999


# [gcode_macro global_get]
# gcode:

# 	G4 P10000
# 	RESPOND msg="p {printer["gcode_macro global_set"].p}";
# 	RESPOND msg="x {printer["gcode_macro global_set"].x}";
# 	RESPOND msg="z {printer["gcode_macro global_set"].z}";
	# M190 S{TEMP}
	# {% for i in range(FULL_STEPS) %}
	# RESPOND msg="Heat soak: Step {i}"
	# M140 S{TEMP}
	# G4 P{STEP*1000}

	# {% endfor %}
	# M140 S{TEMP}
	# G4 P{FINAL_STEP*1000}
